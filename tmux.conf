# 0 is too far from ` ;)
set -g base-index 1

set -g default-shell /bin/zsh

set -g default-terminal "xterm-256color"
set -g status-keys vi
set -g history-limit 100000

set-option -g status-position top

setw -g mode-keys vi
setw -g monitor-activity on

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Use r to quickly reload tmux settings
unbind r
bind r \
  source-file ~/.tmux.conf \;\
  display 'Reloaded tmux config'

# M-' to re-run the command in the 2nd pane
bind-key t select-pane -t 1\; send-keys Up \; send-keys Enter \; select-pane -t 0

# Keep current dir when creating a new window / pane
bind c new-window      -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind "\"" split-window -v -c "#{pane_current_path}"

# THEME
set -g status-bg black
set -g status-fg white
set -g status-left-length 30
set -g status-left '#{window_width}x#{window_height} #{?window_zoomed_flag,üîç ,}'
set -g status-right "#[fg=blue]#(df -h | tr -s ' ' $'\t' | grep disk1s1 | cut -f4)#[default] #[fg=yellow]%H:%M#[default]"

set -g status-style 'bg=colour18 fg=colour137'

setw -g window-status-style         'fg=colour4 bg=colour18'
setw -g window-status-current-style 'fg=colour4 bg=colour23 bold'
setw -g window-status-format         ' #I#[fg=colour237] #[fg=colour250]#W#{?#{!=:#{pane_current_command},zsh},#[fg=colour3] [#{pane_current_command}],''} '
setw -g window-status-current-format ' #I#[fg=colour249] #[fg=colour255]#W#{?#{!=:#{pane_current_command},zsh},#[fg=colour3] [#{pane_current_command}],''} '

setw -g window-status-activity-style 'fg=colour3'
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

set -g message-style 'fg=colour232 bg=colour16'

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{s|/Users/daveystruijk|~|:pane_current_path}'

set -g default-command "exec reattach-to-user-namespace -l zsh"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'soyuka/tmux-current-pane-hostname'

run -b '~/.tmux/plugins/tpm/tpm'
