#------------------------------------------------------------------------------#
# Options
#------------------------------------------------------------------------------#

set -g base-index 1
set -g mouse on
set -g default-shell /bin/zsh
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -g mode-keys vi
set -g status-keys vi
set -g escape-time 0
set -g history-limit 100000
set -g monitor-activity on
set -g status-position top

#------------------------------------------------------------------------------#
# Theme
#------------------------------------------------------------------------------#

set -g status-left-length 30
set -g status-left '#[bg=colour23]#[fg=colour250] %H:%M #[default] '
set -g status-right "#[fg=colour250]#(df -h | tr -s ' ' $'\t' | grep disk1s1 | cut -f4)#[default]"
set -g status-left-length 60
set -g status-interval 2
set -g status-style 'bg=colour8 fg=colour137'
set -g window-status-style         'fg=colour6 bg=colour8'
set -g window-status-current-style 'fg=colour6 bg=colour23 bold'
set -g window-status-format         ' #I #[fg=colour250]#W #{?window_zoomed_flag,üîç ,}'
set -g window-status-current-format ' #I #[fg=colour255]#W #{?window_zoomed_flag,üîç ,}'
set -g window-status-activity-style 'fg=colour3'
set -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
set -g message-style 'fg=colour232 bg=colour2'

#------------------------------------------------------------------------------#
# Keybindings
#------------------------------------------------------------------------------#

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Use r to quickly reload tmux settings
unbind r
bind r \
  source-file ~/.tmux.conf \;\
  display 'Reloaded tmux config'

# <C-b> t to re-run the command in the 2nd pane
bind-key t select-pane -t 1\; send-keys Up \; send-keys Enter \; select-pane -t 0

bind c new-window -c "~"

# Split window 1/3 and keep current dir when creating a new pane
# Smaller panes will still split 50/50
bind % if-shell '[ "#{pane_width}" -eq "#{window_width}" ]' {
  split-window -h -c "#{pane_current_path}" -p 33
} {
  split-window -h -c "#{pane_current_path}" -p 50
}
bind '"' if-shell '[ "#{pane_height}" -eq "#{window_height}" ]' {
  split-window -v -c "#{pane_current_path}" -p 33
} {
  split-window -v -c "#{pane_current_path}" -p 50
}

bind-key a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

#------------------------------------------------------------------------------#
# Plugins
#------------------------------------------------------------------------------#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
run -b '~/.tmux/plugins/tpm/tpm'
